// Code generated by MockGen. DO NOT EDIT.
// Source: exchange.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "garantexGRPC/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockExchanger is a mock of Exchanger interface.
type MockExchanger struct {
	ctrl     *gomock.Controller
	recorder *MockExchangerMockRecorder
}

// MockExchangerMockRecorder is the mock recorder for MockExchanger.
type MockExchangerMockRecorder struct {
	mock *MockExchanger
}

// NewMockExchanger creates a new mock instance.
func NewMockExchanger(ctrl *gomock.Controller) *MockExchanger {
	mock := &MockExchanger{ctrl: ctrl}
	mock.recorder = &MockExchangerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExchanger) EXPECT() *MockExchangerMockRecorder {
	return m.recorder
}

// GetRates mocks base method.
func (m *MockExchanger) GetRates(ctx context.Context, market string) (models.Rates, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRates", ctx, market)
	ret0, _ := ret[0].(models.Rates)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRates indicates an expected call of GetRates.
func (mr *MockExchangerMockRecorder) GetRates(ctx, market interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRates", reflect.TypeOf((*MockExchanger)(nil).GetRates), ctx, market)
}
