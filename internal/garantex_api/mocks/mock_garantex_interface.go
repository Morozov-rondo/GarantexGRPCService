// Code generated by MockGen. DO NOT EDIT.
// Source: garantex.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "garantexGRPC/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGarantexer is a mock of Garantexer interface.
type MockGarantexer struct {
	ctrl     *gomock.Controller
	recorder *MockGarantexerMockRecorder
}

// MockGarantexerMockRecorder is the mock recorder for MockGarantexer.
type MockGarantexerMockRecorder struct {
	mock *MockGarantexer
}

// NewMockGarantexer creates a new mock instance.
func NewMockGarantexer(ctrl *gomock.Controller) *MockGarantexer {
	mock := &MockGarantexer{ctrl: ctrl}
	mock.recorder = &MockGarantexerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGarantexer) EXPECT() *MockGarantexerMockRecorder {
	return m.recorder
}

// GetRates mocks base method.
func (m *MockGarantexer) GetRates(ctx context.Context, market string) (models.Rates, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRates", ctx, market)
	ret0, _ := ret[0].(models.Rates)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRates indicates an expected call of GetRates.
func (mr *MockGarantexerMockRecorder) GetRates(ctx, market interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRates", reflect.TypeOf((*MockGarantexer)(nil).GetRates), ctx, market)
}
